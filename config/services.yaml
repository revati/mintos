# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Domain\Accounting\TransferMoney:
        public: true

    App\Domain\Accounting\AccountRepository:
        public: true

    App\Domain\Accounting:
        public: true

    App\Domain\CurrencyExchange:
        public: true
        shared: true
    App\Domain\CurrencyExchange\RateRepository:
        arguments:
            $baseCurrency:    '%env(BASE_CURRENCY)%'
    App\Domain\CurrencyExchange\ExchangeRateHostClient:
        public: true
        shared: true
        arguments:
            $baseUrl:      '%env(EXCHANGE_RATE_URL)%'
            $apiKey:       '%env(EXCHANGE_RATE_API_KEY)%'
            $currencies:   '%env(CURRENCIES)%'
            $baseCurrency: '%env(BASE_CURRENCY)%'

    App\Domain\CurrencyExchange\UpdateExchangeRatesHandler:
        arguments:
            $application: 'Symfony\Component\Console\Application'
        tags:
            - { name: messenger.message_handler, bus: messenger.bus.default }
            - { name: scheduler.scheduled_task, schedule: '* * * * *', message: App\Domain\CurrencyExchange\UpdateExchangeRatesMessage }

    App\Domain\CurrencyExchange\UpdateExchangeRatesCommand:
        arguments:
            $currencyRateTTL: '%env(CURRENCY_RATES_TTL)%'
            $baseCurrency:    '%env(BASE_CURRENCY)%'

    App\Domain\Access\UserRepository:
        public: true

